function [  ] = HistogramPlot(  )
%HISTOGRAMPLOT Summary of this function goes here
%   Detailed explanation goes here
%%
SetFont();

%% Histograms
n = 50000;       % Number of simulations
X = rand(1,n);
Y = rand(1,n)*2;
Z = X+Y;
nbins = 40; % Number of bins for histogram
hstgrm = makedenshist(Z,nbins);
plothist(hstgrm)
% Now plot true density of Z
z = linspace(0,3,200);
f = @(z).5*(z.*(0<=z & z<1)+(1<=z & z<2)+(3-z).* ...
   (2<=z & z<=3));
hold on
plot(z,f(z),'k'); grid on
hold off

PrintIeeeFig('HistogramPlotResult');

end

function [hstgrm,varargout] = makedenshist(Z,nbins)
% Make a density histogram with nbins bins out of the data in Z.
% We return the 2-by-nbins array hstgrm, where
% hstgrm(1,:) = the list of bin centers, and
% hstgrm(2,:) = normalized histogram heights.
%
% The command
%
%    hstgrm = makedenshist(Z,nbins)
%
% always prints the minimum and maximum data samples,
% denoted by minZ and maxZ.  Alternatively, the command
%
%   [hstgrm,minZ,maxZ] = makedenshist(Z,nbins)
%
% returns these values to you without printing them.

hstgrm = zeros(2,nbins);         % Pre-allocate space

minZ = min(Z);                   % Determine range of data
maxZ = max(Z);
if nargout==3
   varargout{1} = minZ;
   varargout{2} = maxZ;
else
   fprintf('makedenshist: Data range = [ %g , %g ].\n',minZ,maxZ)
end

e = linspace(minZ,maxZ,nbins+1); % Set edges of bins

a = e(1:nbins);                  % Compute centers of bins
b = e(2:nbins+1);                % and store result in
hstgrm(1,:) = (a+b)/2;           % hstgrm(1,:)

H = histc(Z,e);                  % Get bin heights

H(nbins) = H(nbins)+H(nbins+1);  % Put any hits on right-most
                                 % edge into last bin

% Compute and store the normalized bin heights           
bw = (maxZ-minZ)/nbins;
hstgrm(2,:) = H(1:nbins)/(bw*length(Z));

end

function plothist(hstgrm)
% Plot a histogram generated by makedenshist.
% Actually, as long as
% hstgrm(1,:) = the list of bin centers, and
% hstgrm(2,:) = normalized histogram heights,
% plothist will work for you.

bar(hstgrm(1,:),hstgrm(2,:),'hist')
h = findobj(gca,'Type','patch');
set(h,'FaceColor','w','EdgeColor','k')

end

